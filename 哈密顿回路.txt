#include<bits/stdc++.h>
bool vis[maxn];
vector<int>e[maxn];
int rt;
bool finish;
int n;
bool dfs(int cur,int fa)//hamiton trace
{
	bool flag = 0;
	vis[cur] = 1;
	int cnt = 0;
	for (auto v : e[cur])
	{
		if (finish)break;
		if (!vis[v])flag|=dfs(v, cur),cnt++;
	}
	if (cnt == 0&&!finish)
	{
		for (auto v : e[cur])
			if (v == rt)
				flag = 1;
		for (int i = 1; i <= n; i++)flag &= vis[i];
		if(flag)
		finish = 1,cout<<"a ";
	}
	if (flag)cout <<char('a'+ cur-1) << " ";
	vis[cur] = 0;
	return flag;
}
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t,m,x,k,y;
	cin >> n >> m;
	while (m--)
	{
		cin >> x >> y;
		e[x].push_back(y), e[y].push_back(x);
	}
	rt = 1;
	dfs(1, 0);
}
/*
6 9
1 2
1 3
1 4
2 3
2 6
3 4
3 5
4 5
5 6

5 10
1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5
*/