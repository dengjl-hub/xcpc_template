//欧拉函数求法
#include<bits/stdc++.h>
#define ll long long
#define scan(i) scanf("%d",&i)
#define scand(i) scanf("%lf",&i)
#define scanl(i) scanf("%lld",&i)
#define f(i,a,b) for(int i=a;i<=b;i++)
#define pb(i) push_back(i)
#define ppb pop_back()
#define pf printf
#define dbg(args...) cout<<#args<<" : "<<args<<endl;
using namespace std;
#define Max 100001
int euler[Max];
void init(){
     euler[1]=1;
     for(int i=2;i<Max;i++)
       euler[i]=i;
     for(int i=2;i<Max;i++)
        if(euler[i]==i)
           for(int j=i;j<Max;j+=i)
              euler[j]=euler[j]/i*(i-1);//先进行除法是为了防止中间数据的溢出
}
//用通式算的
int Euler(int n){ //返回euler(n)
    int res=n,a=n;
    for(int i=2;i*i<=a;i++){
        if(a%i==0){
            res=res/i*(i-1);//先进行除法是为了防止中间数据的溢出
            while(a%i==0) a/=i;
        }
    }
    if(a>1) res=res/a*(a-1);
    return res;
}
int eulercal(int n){
    int ret=n;
    for(int i=2;i<=sqrt(n);i++)
    if(n%i==0){
        ret=ret/i*(i-1);//先进行除法防止溢出(ret=ret*(1-1/p(i)))
        while(n%i==0) n/=i;
     }
    if(n>1) ret=ret/n*(n-1);
    return ret;
}
int main()
{    init();
    int a;
    ll ans=0;
    scan(a);
    f(i,2,a){
        ans+=euler[i];
    }
    pf("%lld",ans);
}