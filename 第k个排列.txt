int fac[20];
int Pe[20];
//bool vis[30];
signed main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	int t, n, m, A, B, C, D,u,v,k;
	cin >> n >> k;
	signed tmp;
	bool flag = 0;
	fac[0] = 1;
	for (int i = 1; i < 18; i++)
		fac[i] = fac[i - 1] * i;
	int pos = 17;
	while(cin>>k)
	{
		memset(vis, 0, sizeof vis);
		k--;
		if (k == 0)
		{
			cout << 1 << endl;
			continue;
		}
		for (int i = 17; i >= 0; i--)
		{
			if (fac[i] <= k)
			{
				pos = i;
				break;
			}
		}
		pos++;
		vector<signed>pe;
		for (int i = pos; i >= 1; i--)
		{
			int tmp = k / fac[i - 1] + 1;
			int tmp2 = tmp;
			for (int j = 1; j <= pos; j++)
			{
				if (!vis[j])
					tmp--;
				if (tmp == 0)
				{
					vis[j] = 1, pe.push_back(j);
					break;
				}
			}
			k -= (tmp2-1) * fac[i - 1];
		}
		for (auto it : pe)
			cout << it << ' ';
		cout << endl;
	}
	system("pause");
	return 0;
}